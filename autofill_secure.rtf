{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red103\green183\blue164;\red252\green106\blue93;\red208\green168\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c81681\c65692\c99927;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 let
\f1\b0 \cf4  sec = secret.\cf5 cryptoSwiftAESEncrypt\cf4 (key: \cf6 "RheinBrohl2021#!"\cf4 , iv:\cf6 "o8!k3kp=)alk(2h/"\cf4  )\
                
\f0\b \cf2 let
\f1\b0 \cf4  ha = \cf7 String\cf4 (format:\cf6 "%@<->%@"\cf4 ,user,url)\
                
\f0\b \cf2 let
\f1\b0 \cf4  hash = ha.\cf5 cryptoSwiftAESEncrypt\cf4 (key: \cf6 "ValueForAll2023#"\cf4 , iv: \cf6 "o8!k3kp=)alk(2h/"\cf4 )\
\
\
\

\f0\b \cf2 let
\f1\b0 \cf4  hash = ha.\cf5 cryptoSwiftAESEncrypt\cf4 (key: \cf6 "ValueForAll2023#"\cf4 , iv: \cf6 "o8!k3kp=)alk(2h/"\cf4 )\
\
\
\
 
\f0\b \cf2 guard
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  secure = domain.\cf5 pwd\cf4 .\cf5 cryptoSwiftAESDecrypt\cf4 (key: \cf6 "RheinBrohl2021#!"\cf4 , iv:\cf6 "o8!k3kp=)alk(2h/"\cf4  ) 
\f0\b \cf2 else
\f1\b0 \cf4  \{ 
\f0\b \cf2 return
\f1\b0 \cf4  \cf7 ASPasswordCredential\cf4 (user: \cf6 "unknown"\cf4 , password: \cf6 "unknown"\cf4 ) \}}